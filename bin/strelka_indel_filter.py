#!/usr/bin/env python

import gzip
import argparse
import sys

def parse_args(args=None):
    Description = "Filter and reformat indels vcf generated by Strelka."
    Epilog = "Example usage: python check_samplesheet.py <FILE_IN> <FILE_OUT>"

    parser = argparse.ArgumentParser(description=Description, epilog=Epilog)
    parser.add_argument("FILE_IN", help="Input vcf file.")
    parser.add_argument("FILE_OUT", help="Output filtered vcf file.")
    return parser.parse_args(args)

def index_column_substring(your_list, substring):
    for i, s in enumerate(your_list):
        if substring in s:
            return i
    return -1

def strelka2_filter_indels(input, output):
    """
    Filters a Strelka2 VCF (indels) to add the genotype field info
    and keep variants that PASS
    :param input: the input VCF generated with Strelka2
    :param output: the name of filtered VCF file
    :return: None
    """
    filtered_vcf = open(output, 'w')
    vcf = gzip.open(input, 'rt')
    for line in vcf:
        if '##FORMAT=<ID=DP,' in line:
            filtered_vcf.write(
                '##FORMAT=<ID=GT,Number=1,Type=String,Description="Genotype">\n'
                '##FORMAT=<ID=DP,Number=1,Type=Integer,Description="Read Depth">\n')
        elif line.startswith('#CHROM'):
            headers = line.strip().split('\t')
            filtered_vcf.write(line)
        elif not line.startswith('#'):
            columns = line.strip().split('\t')
            if 'PASS' not in columns[headers.index('FILTER')]:
                continue
            INFO = columns[headers.index('INFO')]
            Format = columns[headers.index('FORMAT')]
            Tumor = columns[headers.index('TUMOR')]
            Normal = columns[headers.index('NORMAL')]
            Format = 'GT:' + Format
            INFO_split = INFO.split(';')
            SGT_index = index_column_substring(INFO_split, 'SGT')
            if SGT_index != -1:
                SGT = INFO_split[SGT_index].replace('SGT=', '').split('->')
                Normal_GT = '0/0'
                Tumor_GT = '0/1' if SGT[1] == 'het' else '1/1'
                filtered_vcf.write('{}\t{}\t{}:{}\t{}:{}\n'.format('\t'.join(columns[0:8]),
                                                                   Format,
                                                                   Normal_GT,
                                                                   Normal,
                                                                   Tumor_GT,
                                                                   Tumor))
        else:
            filtered_vcf.write(line)
    vcf.close()
    filtered_vcf.close()

def main(args=None):
    args = parse_args(args)
    strelka2_filter_indels(args.FILE_IN, args.FILE_OUT)

if __name__ == "__main__":
    sys.exit(main())
